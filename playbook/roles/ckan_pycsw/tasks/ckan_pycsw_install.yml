- name: Check if ckan-pycsw repo exists
  stat:
    path: "{{ pycsw_app_dir }}/.git"
  register: repo

- name: Get current ckan-pycsw version
  become: true
  become_user: "{{ ckan_user }}"
  shell: "git -C {{ pycsw_app_dir }} describe --tags"
  register: current_version
  when: repo.stat.exists

- name: Pull ckan-pycsw:{{ ckan_pycsw_version }} from GitHub
  become: true
  become_user: "{{ ckan_user }}"
  git:
    repo: https://github.com/mjanez/ckan-pycsw
    dest: "{{ pycsw_app_dir }}"
    version: "{{ ckan_pycsw_version }}"
  when: not repo.stat.exists or (repo.stat.exists and ckan_pycsw_version is version(current_version.stdout, 'gt'))

- name: Confirm update
  pause:
    prompt: "Do you want to update ckan-pycsw to version {{ ckan_pycsw_version }}? (y/n)"
    echo: yes
  register: confirm_update
  when: repo.stat.exists and ckan_pycsw_version is version(current_version.stdout, 'gt')

- name: "Update ckan-pycsw to version: {{ ckan_pycsw_version }}"
  become: true
  become_user: "{{ ckan_user }}"
  git:
    repo: https://github.com/mjanez/ckan-pycsw
    dest: "{{ pycsw_app_dir }}"
    version: "{{ ckan_pycsw_version }}"
  when: confirm_update is defined and confirm_update.user_input is defined and confirm_update.user_input | lower == 'y'

- name: Install PDM
  shell: curl -sSL https://pdm-project.org/install-pdm.py | python3 -
  become: true
  become_user: "{{ ckan_user }}"

- name: Check PDM version
  shell: |
    export PATH=$HOME/.local/bin:$PATH
    pdm --version
  register: pdm_version
  changed_when: false
  become: true
  become_user: "{{ ckan_user }}"

- name: Debug PDM version
  debug:
    var: pdm_version.stdout_lines

- name: Run pdm install --no-self --group prod
  shell: |
    export PATH=$HOME/.local/bin:$PATH
    pdm install --no-self --group prod
  args:
    chdir: "{{ pycsw_app_dir }}"
  become: true
  become_user: "{{ ckan_user }}"

- name: Remove cite.db if it exists
  file:
    path: "{{ pycsw_app_dir }}/cite.db"
    state: absent
  become: true
  become_user: "{{ ckan_user }}"
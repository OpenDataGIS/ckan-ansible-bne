- name: Copy CKAN config file
  template:
    src: ckan.ini.j2
    dest: "{{ ckan_config_dir }}/ckan.ini"
    mode: 0755
  become: true
  become_user: "{{ ckan_user }}"

- name: Copy WHO config file
  template:
    src: who.ini.j2
    dest: "{{ ckan_config_dir }}/who.ini"
    mode: 0755
  become: true
  become_user: "{{ ckan_user }}"

- name: "Create a symbolic link to the ckan.ini file in {{ ckan_virtualenv}}"
  file:
    src: "{{ ckan_config_dir }}/ckan.ini" 
    dest: "{{ ckan_virtualenv}}/ckan.ini" 
    state: link
    force: yes

- name: "Create a symbolic link to the who.ini file in {{ ckan_virtualenv}}"
  file:
    src: "{{ ckan_config_dir}}/who.ini" 
    dest: "{{ ckan_virtualenv}}/who.ini" 
    state: link
    force: yes

- name: Update CKAN config file
  include_tasks: ckan_config_ckan_ini.yml

- name: Initializing or upgrading CKAN database
  command: "{{ ckan_virtualenv }}/bin/ckan --config={{ ckan_config_dir}}/ckan.ini db upgrade"

- name: Initializing datastore database
  shell: |
    export PGPASSWORD="{{ ckan_database.ckan_db_password }}"
    {{ ckan_virtualenv }}/bin/ckan --config={{ ckan_config_dir }}/ckan.ini datastore set-permissions | \
    psql --host={{ ckan_datastore.datastore_host }} --port={{ ckan_datastore.datastore_port }} --username={{ ckan_database.ckan_db_user }} --dbname={{ ckan_datastore.datastore_db }} --set ON_ERROR_STOP=1
  register: result
  failed_when: result.rc != 0
  changed_when: false
  environment:
    PGPASSWORD: "{{ ckan_database.ckan_db_password }}"

- name: Create webassets storage folder
  file:
    path: "{{ ckan_config_dir}}/webassets"
    state: directory
    mode: '0777'
  become: true
  become_user: "{{ ckan_user }}"

- name: Create storage folder
  file:
    path: "{{ ckan_storage_dir }}"
    state: directory
    mode: '0777'
  become: true
  become_user: "{{ ckan_user }}"

- name: Ensure ckan log directory exists
  file:
    path: "{{ ckan_log_dir }}"
    state: directory
    mode: '0777'
  become: true

# Add CKAN sysadmin user
- block:
    - name: Check if CKAN sysadmin user exists
      command: "{{ ckan_virtualenv }}/bin/ckan -c {{ ckan_config_dir }}/ckan.ini user show {{ ckan_sysadmin_name }}"
      register: user_exists
      retries: 5
      delay: 5
      until: user_exists.rc == 0
      ignore_errors: true

    - name: Create CKAN sysadmin user
      command: "{{ ckan_virtualenv }}/bin/ckan -c {{ ckan_config_dir }}/ckan.ini user add {{ ckan_sysadmin_name }} password={{ ckan_sysadmin_password }} email={{ ckan_sysadmin_email }}"
      when: "'User: None' in user_exists.stdout"

    - name: Make CKAN user a sysadmin
      command: "{{ ckan_virtualenv }}/bin/ckan -c {{ ckan_config_dir }}/ckan.ini sysadmin add {{ ckan_sysadmin_name }}"
      when: "'User: None' in user_exists.stdout"
  environment:
    CKAN_SYSADMIN_NAME: "{{ ckan_sysadmin_name }}"
    CKAN_SYSADMIN_PASSWORD: "{{ ckan_sysadmin_password }}"
    CKAN_SYSADMIN_EMAIL: "{{ ckan_sysadmin_email }}"
    CKAN_INI: "{{ ckan_config_dir }}/ckan.ini"
- name: Install PostgreSQL {{ postgres_version }} server and psycopg2 (RHEL/CentOS >= 8)
  dnf:
    name: "{{ postgresql_deps_pkgs }}"
    state: present
    update_cache: true
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version|int >= 8

- name: Install PostgreSQL {{ postgres_version }} server and psycopg2 (Debian/Ubuntu)
  apt:
    name: "{{ postgresql_deps_pkgs }}"
    state: present
    update_cache: true
  when: ansible_os_family == "Debian"

- name: Install PostgreSQL {{ postgres_version }} server and psycopg2 (Arch Linux)
  pacman:
    name: "{{ postgresql_deps_pkgs }}"
    state: present
    update_cache: true
  when: ansible_os_family == "Archlinux"

- name: Install python3-psycopg2 if python_pkg is not python3 (RHEL/CentOS)
  dnf:
    name: "{{ postgresqL_python3_psycopg2 }}"
    state: present
  when: python_pkg != 'python3' and ansible_os_family == "RedHat" and ansible_distribution_major_version|int >= 8

- name: Install python3-psycopg2 if python_pkg is not python3 (Debian/Ubuntu)
  apt:
    name: "{{ postgresqL_python3_psycopg2 }}"
    state: present
  when: python_pkg != 'python3' and ansible_os_family == "Debian"

- name: Install python3-psycopg2 if python_pkg is not python3 (Arch Linux)
  pacman:
    name: "{{ postgresqL_python3_psycopg2 }}"
    state: present
  when: python_pkg != 'python3' and ansible_os_family == "Archlinux"

- name: "Check if database {{ ckan_database.ckan_db }} exists in PostgreSQL"
  shell: psql -lqt | cut -d \| -f 1 | grep -qw {{ ckan_database.ckan_db }}
  register: database_exists
  failed_when: false
  changed_when: false

- name: Stop PostgreSQL service
  service:
    name: postgresql
    state: stopped
  when: not database_exists.rc == 0
  become: true

- name: "Delete PostgreSQL data directory if database {{ ckan_database.ckan_db }} does not exist"
  file:
    path: "{{ postgres_dir }}"
    state: absent
  when: not database_exists.rc == 0
  become: true

- name: Initialize the PostgreSQL cluster
  command:
    cmd: postgresql-setup --initdb
  when: not database_exists.rc == 0
  become: true

- name: Set PostgreSQL port
  lineinfile:
    path: "{{ postgres_dir }}/postgresql.conf"
    regexp: '^#?port ='
    line: "port = {{ postgres_port }}"
  become: true

- name: Start and enable the PostgresSQL service
  systemd:
    name: postgresql
    state: reloaded


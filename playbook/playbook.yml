- name: Deploy CKAN-spatial server
  hosts: ckan_servers
  become: true
  gather_facts: true

  vars_prompt:
    - name: "ansible_become_password"
      prompt: "Enter your sudo password (or press Enter to proceed without a password)"
      private: true
      default: ""

    - name: "setup_local_database"
      prompt: "Do you want to setup a local PostgresSQL Database? \nWARNING: This may delete an existing PostgreSQL database! (y/n)"
      private: false
      default: "n"
      
    - name: "setup_local_solr"
      prompt: "Do you want to setup a local Solr instance with spatial capabilities? (y/n)"
      private: false
      default: "n"

    - name: "setup_local_redis"
      prompt: "Do you want to setup a local Redis instance? (y/n)"
      private: false
      default: "n"

  pre_tasks:
    - name: Verify distribution
      fail:
        msg: "Currently, it only supports CentOS and RedHat distributions."
      when: ansible_distribution | lower not in ['centos', 'redhat']

    - name: "Include global variables for all hosts (group_vars/all.yml)"
      include_vars: "inventories/group_vars/all.yml"

    - name: Set deployment_version_name
      set_fact:
        deployment_version_name: "{{ deployment_version_name_map[inventory_dir | basename] }}"
    
    - name: "Debug {{ inventory_dir | basename }} deployment version"
      debug:
        msg: "Deployment version is: {{ deployment_version_name }}"

    - name: Ensure ckan-ansible log directory exists
      file:
        path: "{{ ckan_ansible_log_path }}"
        state: directory
        mode: '0777'
      become: true

    - name: "Change owner and group of {{ ckan_ansible_log_path }} to {{ ckan_user }}"
      file:
        path: "{{ ckan_ansible_log_path }}"
        owner: "{{ ckan_user }}"
        group: "{{ ckan_group }}"
        recurse: yes
      become: true
    
  roles:
      - { role: common, tags: common }
      - { role: database, tags: database, when: setup_local_database == "y" }
      - { role: solr, tags: solr, when: setup_local_solr == "y" }
      - { role: redis, tags: redis, when: setup_local_redis == "y" }
      - { role: ckan, tags: ckan }
      - { role: ckan_pycsw, tags: ckan_pycsw }
      - { role: webserver, tags: webserver }
      - { role: supervisor, tags: supervisor }

  post_tasks:
    - name: "Change owner and group of {{ ckan_virtualenv }} to {{ ckan_user }}"
      file:
        path: "{{ ckan_virtualenv }}"
        owner: "{{ ckan_user }}"
        group: "{{ ckan_group }}"
        recurse: yes
      become: true

    - name: "Change owner and group of {{ ckan_config_dir }} to {{ ckan_user }}"
      file:
        path: "{{ ckan_config_dir }}"
        owner: "{{ ckan_user }}"
        group: "{{ ckan_group }}"
        recurse: yes
      become: true

    # Log package versions of ckan-ansible components and common packages to a file if gather_package_facts is enabled
    - block:
        - name: Gather package facts
          package_facts:

        - name: Get Nginx version
          command: nginx -v
          register: nginx_version_output
          failed_when: false
          changed_when: false

        - name: Extract Nginx version
          set_fact:
            nginx_version: "{{ nginx_version_output.stderr | regex_search('nginx/([0-9.]+)', '\\1') }}"

        - name: Get Supervisor version
          command: supervisord -v
          register: supervisor_version_output
          failed_when: false
          changed_when: false

        - name: Extract Supervisor version
          set_fact:
            supervisor_version: "{{ supervisor_version_output.stdout }}"

        - name: Get pip packages in CKAN virtualenv
          command: "{{ ckan_virtualenv }}/bin/pip list --format=json"
          register: pip_packages_output
          failed_when: false
          changed_when: false

        - name: Convert pip packages output to dictionary
          set_fact:
            ckan_virtualenv_pip_pkgs: "{{ pip_packages_output.stdout | from_json | items2dict(key_name='name', value_name='version') }}"

        - name: Define versions dictionary of ckan-ansible components
          set_fact:
            versions_dict:
              ckan: "{{ ckan_version | string }}"
              ckanext: "{{ ckanext_versions }}"
              ckan-pycsw: "{{ ckan_pycsw_version | string }}"
              postgresql: "{{ postgres_version | string }}"
              solr: "{{ solr_version | string }}"
              supervisor: "{{ supervisor_version | string }}"
              nginx: "{{ nginx_version }}"
              uwsgi: "{{ uwsgi_version | string }}"
              ckan_virtualenv_pip_pkgs: "{{ ckan_virtualenv_pip_pkgs }}"

        - name: Extract formatted date and time
          set_fact:
            formatted_datetime: "{{ ansible_date_time.iso8601 | regex_replace('T', '_') | regex_replace(':', '-') | regex_replace('\\..*', '') }}"

        - name: Save package versions to a file in {{ ckan_ansible_log_path }}
          copy:
            content: "{{ {'common-packages': ansible_facts.packages, 'ckan-ansible-components': versions_dict} | to_nice_json }}"
            dest: "{{ ckan_ansible_log_path }}/{{ inventory_hostname }}_ckan_ansible_pkgs_{{ formatted_datetime }}.json"
            owner: "{{ ckan_user }}"
            group: "{{ ckan_group }}"
            mode: '0644'
      when: gather_package_facts